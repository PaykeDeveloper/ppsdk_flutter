#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef PROFILEPASSPORTCORE_SWIFT_H
#define PROFILEPASSPORTCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ProfilePassportCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)










SWIFT_CLASS("_TtC19ProfilePassportCore26PP3CCheckInAvailableResult")
@interface PP3CCheckInAvailableResult : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 通知検知用データエンティティ
/// ジオライブラリ・ビーコンライブラリ・通知ライブラリからのアクセスがあり
SWIFT_CLASS("_TtC19ProfilePassportCore26PP3CLibraryRelayDataEntity")
@interface PP3CLibraryRelayDataEntity : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// ログDBエンティティクラス
/// ジオ・ビーコン・通知ライブラリからの参照あり
SWIFT_CLASS("_TtC19ProfilePassportCore15PP3CLogDBEntity")
@interface PP3CLogDBEntity : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PP3CPPSdkState, open) {
  PP3CPPSdkStateNONE = 0,
  PP3CPPSdkStateSTOP = 1,
  PP3CPPSdkStateLOADING = 2,
  PP3CPPSdkStateREMOTE_STOP = 3,
  PP3CPPSdkStateWORK = 4,
};


SWIFT_CLASS("_TtC19ProfilePassportCore21PP3CS3IndexDataEntity")
@interface PP3CS3IndexDataEntity : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19ProfilePassportCore14PP3CS3ObjIndex")
@interface PP3CS3ObjIndex : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19ProfilePassportCore12PP3CSDKQueue")
@interface PP3CSDKQueue : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 個別情報開示表示タイプ
typedef SWIFT_ENUM(NSInteger, PP3CUserInformationDisclosureType, open) {
  PP3CUserInformationDisclosureTypeWebView = 0,
  PP3CUserInformationDisclosureTypeDialog = 1,
  PP3CUserInformationDisclosureTypeLowerHalf = 2,
};

@class NSString;
enum PPCheckInGeoState : NSInteger;
@class NSDate;
enum PPCheckInGeoKind : NSInteger;
@class PPCheckInGeoLocation;
@class PPCheckInGeoTag;

/// チェックインジオ情報
SWIFT_CLASS("_TtC19ProfilePassportCore12PPCheckInGeo")
@interface PPCheckInGeo : NSObject
/// ジオID
@property (nonatomic) NSInteger geoId;
/// ジオ名
@property (nonatomic, copy) NSString * _Nonnull geoName;
/// ジオ状態
/// <br>UNKNOWN:0
/// <br>in:1
/// <br>out:2
@property (nonatomic) enum PPCheckInGeoState geoState;
/// ジオチェックイン時間
@property (nonatomic, copy) NSDate * _Null_unspecified geoCheckInTime;
/// ジオエリア種別
/// <br>CIRCLE:1
/// <br>POLYGON:2
@property (nonatomic) enum PPCheckInGeoKind geoKind;
/// 中心点座標
@property (nonatomic, strong) PPCheckInGeoLocation * _Nullable centerCoordinate;
/// 半径
@property (nonatomic) double geoRadius;
/// ポリゴンの座標配列(ポリゴン頂点順の配列)
@property (nonatomic, copy) NSArray<PPCheckInGeoLocation *> * _Nullable apexCoordinates;
/// 検知ジオタグ情報リスト
@property (nonatomic, copy) NSArray<PPCheckInGeoTag *> * _Nonnull geoTags;
- (nonnull instancetype)initWithGeoCheckInTime:(NSDate * _Nonnull)geoCheckInTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// チェックインジオ種別
typedef SWIFT_ENUM(NSInteger, PPCheckInGeoKind, open) {
  PPCheckInGeoKindCIRCLE = 1,
  PPCheckInGeoKindPOLYGON = 2,
};


/// チェックインジオロケーション
SWIFT_CLASS("_TtC19ProfilePassportCore20PPCheckInGeoLocation")
@interface PPCheckInGeoLocation : NSObject
/// 緯度
@property (nonatomic) double latitude;
/// 経度
@property (nonatomic) double longitude;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// チェックインジオ状態
typedef SWIFT_ENUM(NSInteger, PPCheckInGeoState, open) {
  PPCheckInGeoStateUNKNOWN = 0,
  PPCheckInGeoStateIN = 1,
  PPCheckInGeoStateOUT = 2,
};


/// チェックインジオタグ情報
SWIFT_CLASS("_TtC19ProfilePassportCore15PPCheckInGeoTag")
@interface PPCheckInGeoTag : NSObject
/// ジオタグID
@property (nonatomic) NSInteger geoTagId;
/// ジオタグ名
@property (nonatomic, copy) NSString * _Nonnull geoTagName;
/// ジオタグ状態
/// <br>UNKNOWN:0
/// <br>in:1
/// <br>out:2
@property (nonatomic) enum PPCheckInGeoState geoTagState;
/// ジオタグチェックイン時間
@property (nonatomic, copy) NSDate * _Null_unspecified geoTagCheckInTime;
- (nonnull instancetype)initWithGeoTagCheckInTime:(NSDate * _Nonnull)geoTagCheckInTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocation;

/// チェックイン結果
SWIFT_CLASS("_TtC19ProfilePassportCore15PPCheckInResult")
@interface PPCheckInResult : NSObject
/// チェックイン位置情報
@property (nonatomic, strong) CLLocation * _Nullable location;
/// イン・ジオリスト
@property (nonatomic, copy) NSArray<PPCheckInGeo *> * _Nonnull inGeoList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// PPSDKデリゲート
SWIFT_PROTOCOL("_TtP19ProfilePassportCore13PPSDKDelegate_")
@protocol PPSDKDelegate
@end

@class UIViewController;

/// SDK管理クラス
SWIFT_CLASS("_TtC19ProfilePassportCore12PPSDKManager")
@interface PPSDKManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PPSDKManager * _Nonnull shared;)
+ (PPSDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 個別情報開示画面表示API
/// @param controller: 表示元コントローラ
/// @param type: 個別情報開示表示タイプ
/// <br> webView画面表示:PP3CUserInformationDisclosureTypeWebView
/// <br> ダイアログ画面表示:PP3CUserInformationDisclosureTypeDialog
/// <br> 下半分画面表示:PP3CUserInformationDisclosureTypeLowerHalf
/// @param option: 条件(未実装)
/// @param callback: コールバック
- (void)showUserInformationDisclosureWithController:(UIViewController * _Nonnull)controller type:(enum PP3CUserInformationDisclosureType)type option:(NSDictionary<NSString *, id> * _Nullable)option callback:(void (^ _Nonnull)(void))callback;
/// SDK初期化API
/// @param sdkDelegate: SDKデリゲート
/// @param launchOptions: App起動オプション
- (void)initializeSDKWithSdkDelegate:(id <PPSDKDelegate> _Nullable)sdkDelegate launchOptions:(NSDictionary * _Nullable)launchOptions;
/// PP3.0 UUID取得API
/// @return UUID
- (NSString * _Nonnull)getPPUUID SWIFT_WARN_UNUSED_RESULT;
/// ユーザーデータハッシュ取得API
/// @return ユーザーデータハッシュ
- (NSDictionary * _Nonnull)getUserSegmentHash SWIFT_WARN_UNUSED_RESULT;
/// 指定されたキーのユーザーセグメント取得API
/// @param 指定キー
/// @return 指定されたキーのユーザーセグメント
- (NSString * _Nullable)getUserSegmentWithKeyWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// ユーザーセグメント設定API
/// @param key: 指定キー <br>半角英数字のみ、9文字以内
/// @param value: 保存値 <br>半角英数字のみ、9文字以内、nullの場合は削除
/// @return true:セグメント設定, false:バリデーションエラー
- (BOOL)setUserSegmentWithKeyWithKey:(NSString * _Nonnull)key value:(NSString * _Nullable)value;
/// ユーザーデータクリアAPI
- (void)clearUserSegment;
/// 連携ID取得API
/// @return 配信会員ID
- (NSString * _Nullable)getLogLinkId SWIFT_WARN_UNUSED_RESULT;
/// 連携ID設定API
/// @param logLinkId: 連携ID
/// <br>160文字以内、nullの場合は削除
/// @return true: 連携ID設定, false: バリデーションエラー
- (BOOL)setLogLinkIdWithLogLinkId:(NSString * _Nullable)logLinkId;
/// 配信会員ID取得API
/// @return 配信会員ID
- (NSString * _Nullable)getPushMemberId SWIFT_WARN_UNUSED_RESULT;
/// 配信会員ID設定API
/// @param pushMemberId: 配信会員ID
/// <br>半角英数字のみ、128文字以内、nullの場合は削除
/// @return true: 配信会員ID設定, false: バリデーションエラー
- (BOOL)setPushMemberIdWithPushMemberId:(NSString * _Nullable)pushMemberId;
/// デバイストークン取得API
/// @return デバイストークン
- (NSString * _Nullable)getDeviceToken SWIFT_WARN_UNUSED_RESULT;
/// PPSDK起動API
/// @param options: 起動オプション default:null(全表示)
/// <br> 位置情報権限ダイアログ表示オプション key:isRequestLocationPermit value:true/false 表示/非表示
/// <br> 通知権限ダイアログ表示オプション key:isRequestNoticePermit value:true/false 表示/非表示
/// <br> トラッキング権限ダイアログ表示オプション key:isRequestTrackingPermit value:true/false 表示/非表示
/// @param callback: PPSDK起動成功可否コールバック
/// <br> 成功 code:0 errorMesssage:認証に成功しました
/// <br> 失敗 code:1002 errorMesssage:通信ができませんでした
/// <br> 失敗 code:1003 errorMesssage:認証に失敗しました
- (void)serviceStartWithOptions:(NSDictionary<NSString *, NSString *> * _Nullable)options callback:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nullable))callback;
/// PPSDK停止API
- (void)serviceStop;
/// PPSDKサービス起動状態取得API
/// @return true: PPSDKサービス起動中, false: PPSDKサービス停止中 (def)
- (BOOL)getServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// ジオサービス起動設定API
/// @param isGeoStart: true:ジオサービス起動, false: ジオサービス停止
- (void)setGeoServiceFlagWithIsGeoStart:(BOOL)isGeoStart;
/// ジオサービス起動状態取得API
/// @return true: ジオサービス起動中, false: ジオサービス停止中
- (BOOL)getGeoServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// 通知サービス起動設定API
/// @param isNoticeStart: true: 通知サービス起動, false: 通知サービス停止
- (void)setNoticeServiceFlagWithIsNoticeStart:(BOOL)isNoticeStart;
/// 通知サービス起動状態取得API
/// @return 通知サービス起動中, false: 通知サービス停止中
- (BOOL)getNoticeServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// ビーコンサービス起動設定API
/// @param isBeaconStart: true:ビーコンサービス起動, false: ビーコンサービス停止
- (void)setBeaconServiceFlagWithIsBeaconStart:(BOOL)isBeaconStart;
/// ビーコンサービス起動状態取得API
/// @return true: ジオサービス起動中, false: ビーコンサービス停止中
- (BOOL)getBeaconServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// チェックインAPI
/// @param options: 起動オプション
/// @param callback: チェックインコールバック
/// <br> 成功 code:0 errorMesssage:null PPCheckInResult:オブジェクト有
/// <br> 失敗 code:1002 errorMesssage:通信ができませんでした PPCheckInResult:null
/// <br> 失敗 code:1003 errorMesssage:認証に失敗しました PPCheckInResult:null
/// <br> 失敗 code:1011 errorMesssage:PPSDKが起動していない PPCheckInResult:null
/// <br> 失敗 code:1012 errorMesssage:PPSDKがリモート停止している PPCheckInResult:null
/// <br> 失敗 code:1030 errorMesssage:ジオライブラリが確認できない PPCheckInResult:null
/// <br> 失敗 code:1031 errorMesssage:ジオライブラリが起動していない PPCheckInResult:null
/// <br> 失敗 code:1032 errorMesssage:ジオライブラリがリモート停止している PPCheckInResult:null
/// <br> 失敗 code:1033 errorMesssage:位置情報権限がない PPCheckInResult:null
/// <br> 失敗 code:1034 errorMesssage:正確な位置情報権限がない PPCheckInResult:null
/// <br> 失敗 code:1035 errorMesssage:端末位置情報がオフになっている PPCheckInResult:null
/// <br> 失敗 code:1041 errorMesssage:現在チェックイン処理中 PPCheckInResult:null
/// <br> 失敗 code:1042 errorMesssage:ジオリストが取得できない PPCheckInResult:null
/// <br> 失敗 code:1051 errorMesssage:処理時間オーバー PPCheckInResult:null
/// <br> 失敗 code:1900 errorMesssage:予期せぬエラー PPCheckInResult:null
- (void)updateLocationAndCheckInOptions:(NSDictionary<NSString *, NSString *> * _Nullable)options callback:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nullable, PPCheckInResult * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef PROFILEPASSPORTCORE_SWIFT_H
#define PROFILEPASSPORTCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ProfilePassportCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)










SWIFT_CLASS("_TtC19ProfilePassportCore26PP3CCheckInAvailableResult")
@interface PP3CCheckInAvailableResult : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 通知検知用データエンティティ
/// ジオライブラリ・ビーコンライブラリ・通知ライブラリからのアクセスがあり
SWIFT_CLASS("_TtC19ProfilePassportCore26PP3CLibraryRelayDataEntity")
@interface PP3CLibraryRelayDataEntity : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// ログDBエンティティクラス
/// ジオ・ビーコン・通知ライブラリからの参照あり
SWIFT_CLASS("_TtC19ProfilePassportCore15PP3CLogDBEntity")
@interface PP3CLogDBEntity : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PP3CPPSdkState, open) {
  PP3CPPSdkStateNONE = 0,
  PP3CPPSdkStateSTOP = 1,
  PP3CPPSdkStateLOADING = 2,
  PP3CPPSdkStateREMOTE_STOP = 3,
  PP3CPPSdkStateWORK = 4,
};


SWIFT_CLASS("_TtC19ProfilePassportCore21PP3CS3IndexDataEntity")
@interface PP3CS3IndexDataEntity : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19ProfilePassportCore14PP3CS3ObjIndex")
@interface PP3CS3ObjIndex : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19ProfilePassportCore12PP3CSDKQueue")
@interface PP3CSDKQueue : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 個別情報開示表示タイプ
typedef SWIFT_ENUM(NSInteger, PP3CUserInformationDisclosureType, open) {
  PP3CUserInformationDisclosureTypeWebView = 0,
  PP3CUserInformationDisclosureTypeDialog = 1,
  PP3CUserInformationDisclosureTypeLowerHalf = 2,
};

@class NSString;
enum PPCheckInGeoState : NSInteger;
@class NSDate;
enum PPCheckInGeoKind : NSInteger;
@class PPCheckInGeoLocation;
@class PPCheckInGeoTag;

/// チェックインジオ情報
SWIFT_CLASS("_TtC19ProfilePassportCore12PPCheckInGeo")
@interface PPCheckInGeo : NSObject
/// ジオID
@property (nonatomic) NSInteger geoId;
/// ジオ名
@property (nonatomic, copy) NSString * _Nonnull geoName;
/// ジオ状態
/// <br>UNKNOWN:0
/// <br>in:1
/// <br>out:2
@property (nonatomic) enum PPCheckInGeoState geoState;
/// ジオチェックイン時間
@property (nonatomic, copy) NSDate * _Null_unspecified geoCheckInTime;
/// ジオエリア種別
/// <br>CIRCLE:1
/// <br>POLYGON:2
@property (nonatomic) enum PPCheckInGeoKind geoKind;
/// 中心点座標
@property (nonatomic, strong) PPCheckInGeoLocation * _Nullable centerCoordinate;
/// 半径
@property (nonatomic) double geoRadius;
/// ポリゴンの座標配列(ポリゴン頂点順の配列)
@property (nonatomic, copy) NSArray<PPCheckInGeoLocation *> * _Nullable apexCoordinates;
/// 検知ジオタグ情報リスト
@property (nonatomic, copy) NSArray<PPCheckInGeoTag *> * _Nonnull geoTags;
- (nonnull instancetype)initWithGeoCheckInTime:(NSDate * _Nonnull)geoCheckInTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// チェックインジオ種別
typedef SWIFT_ENUM(NSInteger, PPCheckInGeoKind, open) {
  PPCheckInGeoKindCIRCLE = 1,
  PPCheckInGeoKindPOLYGON = 2,
};


/// チェックインジオロケーション
SWIFT_CLASS("_TtC19ProfilePassportCore20PPCheckInGeoLocation")
@interface PPCheckInGeoLocation : NSObject
/// 緯度
@property (nonatomic) double latitude;
/// 経度
@property (nonatomic) double longitude;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// チェックインジオ状態
typedef SWIFT_ENUM(NSInteger, PPCheckInGeoState, open) {
  PPCheckInGeoStateUNKNOWN = 0,
  PPCheckInGeoStateIN = 1,
  PPCheckInGeoStateOUT = 2,
};


/// チェックインジオタグ情報
SWIFT_CLASS("_TtC19ProfilePassportCore15PPCheckInGeoTag")
@interface PPCheckInGeoTag : NSObject
/// ジオタグID
@property (nonatomic) NSInteger geoTagId;
/// ジオタグ名
@property (nonatomic, copy) NSString * _Nonnull geoTagName;
/// ジオタグ状態
/// <br>UNKNOWN:0
/// <br>in:1
/// <br>out:2
@property (nonatomic) enum PPCheckInGeoState geoTagState;
/// ジオタグチェックイン時間
@property (nonatomic, copy) NSDate * _Null_unspecified geoTagCheckInTime;
- (nonnull instancetype)initWithGeoTagCheckInTime:(NSDate * _Nonnull)geoTagCheckInTime OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocation;

/// チェックイン結果
SWIFT_CLASS("_TtC19ProfilePassportCore15PPCheckInResult")
@interface PPCheckInResult : NSObject
/// チェックイン位置情報
@property (nonatomic, strong) CLLocation * _Nullable location;
/// イン・ジオリスト
@property (nonatomic, copy) NSArray<PPCheckInGeo *> * _Nonnull inGeoList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// PPSDKデリゲート
SWIFT_PROTOCOL("_TtP19ProfilePassportCore13PPSDKDelegate_")
@protocol PPSDKDelegate
@end

@class UIViewController;

/// SDK管理クラス
SWIFT_CLASS("_TtC19ProfilePassportCore12PPSDKManager")
@interface PPSDKManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PPSDKManager * _Nonnull shared;)
+ (PPSDKManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 個別情報開示画面表示API
/// @param controller: 表示元コントローラ
/// @param type: 個別情報開示表示タイプ
/// <br> webView画面表示:PP3CUserInformationDisclosureTypeWebView
/// <br> ダイアログ画面表示:PP3CUserInformationDisclosureTypeDialog
/// <br> 下半分画面表示:PP3CUserInformationDisclosureTypeLowerHalf
/// @param option: 条件(未実装)
/// @param callback: コールバック
- (void)showUserInformationDisclosureWithController:(UIViewController * _Nonnull)controller type:(enum PP3CUserInformationDisclosureType)type option:(NSDictionary<NSString *, id> * _Nullable)option callback:(void (^ _Nonnull)(void))callback;
/// SDK初期化API
/// @param sdkDelegate: SDKデリゲート
/// @param launchOptions: App起動オプション
- (void)initializeSDKWithSdkDelegate:(id <PPSDKDelegate> _Nullable)sdkDelegate launchOptions:(NSDictionary * _Nullable)launchOptions;
/// PP3.0 UUID取得API
/// @return UUID
- (NSString * _Nonnull)getPPUUID SWIFT_WARN_UNUSED_RESULT;
/// ユーザーデータハッシュ取得API
/// @return ユーザーデータハッシュ
- (NSDictionary * _Nonnull)getUserSegmentHash SWIFT_WARN_UNUSED_RESULT;
/// 指定されたキーのユーザーセグメント取得API
/// @param 指定キー
/// @return 指定されたキーのユーザーセグメント
- (NSString * _Nullable)getUserSegmentWithKeyWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// ユーザーセグメント設定API
/// @param key: 指定キー <br>半角英数字のみ、9文字以内
/// @param value: 保存値 <br>半角英数字のみ、9文字以内、nullの場合は削除
/// @return true:セグメント設定, false:バリデーションエラー
- (BOOL)setUserSegmentWithKeyWithKey:(NSString * _Nonnull)key value:(NSString * _Nullable)value;
/// ユーザーデータクリアAPI
- (void)clearUserSegment;
/// 連携ID取得API
/// @return 配信会員ID
- (NSString * _Nullable)getLogLinkId SWIFT_WARN_UNUSED_RESULT;
/// 連携ID設定API
/// @param logLinkId: 連携ID
/// <br>160文字以内、nullの場合は削除
/// @return true: 連携ID設定, false: バリデーションエラー
- (BOOL)setLogLinkIdWithLogLinkId:(NSString * _Nullable)logLinkId;
/// 配信会員ID取得API
/// @return 配信会員ID
- (NSString * _Nullable)getPushMemberId SWIFT_WARN_UNUSED_RESULT;
/// 配信会員ID設定API
/// @param pushMemberId: 配信会員ID
/// <br>半角英数字のみ、128文字以内、nullの場合は削除
/// @return true: 配信会員ID設定, false: バリデーションエラー
- (BOOL)setPushMemberIdWithPushMemberId:(NSString * _Nullable)pushMemberId;
/// デバイストークン取得API
/// @return デバイストークン
- (NSString * _Nullable)getDeviceToken SWIFT_WARN_UNUSED_RESULT;
/// PPSDK起動API
/// @param options: 起動オプション default:null(全表示)
/// <br> 位置情報権限ダイアログ表示オプション key:isRequestLocationPermit value:true/false 表示/非表示
/// <br> 通知権限ダイアログ表示オプション key:isRequestNoticePermit value:true/false 表示/非表示
/// <br> トラッキング権限ダイアログ表示オプション key:isRequestTrackingPermit value:true/false 表示/非表示
/// @param callback: PPSDK起動成功可否コールバック
/// <br> 成功 code:0 errorMesssage:認証に成功しました
/// <br> 失敗 code:1002 errorMesssage:通信ができませんでした
/// <br> 失敗 code:1003 errorMesssage:認証に失敗しました
- (void)serviceStartWithOptions:(NSDictionary<NSString *, NSString *> * _Nullable)options callback:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nullable))callback;
/// PPSDK停止API
- (void)serviceStop;
/// PPSDKサービス起動状態取得API
/// @return true: PPSDKサービス起動中, false: PPSDKサービス停止中 (def)
- (BOOL)getServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// ジオサービス起動設定API
/// @param isGeoStart: true:ジオサービス起動, false: ジオサービス停止
- (void)setGeoServiceFlagWithIsGeoStart:(BOOL)isGeoStart;
/// ジオサービス起動状態取得API
/// @return true: ジオサービス起動中, false: ジオサービス停止中
- (BOOL)getGeoServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// 通知サービス起動設定API
/// @param isNoticeStart: true: 通知サービス起動, false: 通知サービス停止
- (void)setNoticeServiceFlagWithIsNoticeStart:(BOOL)isNoticeStart;
/// 通知サービス起動状態取得API
/// @return 通知サービス起動中, false: 通知サービス停止中
- (BOOL)getNoticeServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// ビーコンサービス起動設定API
/// @param isBeaconStart: true:ビーコンサービス起動, false: ビーコンサービス停止
- (void)setBeaconServiceFlagWithIsBeaconStart:(BOOL)isBeaconStart;
/// ビーコンサービス起動状態取得API
/// @return true: ジオサービス起動中, false: ビーコンサービス停止中
- (BOOL)getBeaconServiceFlag SWIFT_WARN_UNUSED_RESULT;
/// チェックインAPI
/// @param options: 起動オプション
/// @param callback: チェックインコールバック
/// <br> 成功 code:0 errorMesssage:null PPCheckInResult:オブジェクト有
/// <br> 失敗 code:1002 errorMesssage:通信ができませんでした PPCheckInResult:null
/// <br> 失敗 code:1003 errorMesssage:認証に失敗しました PPCheckInResult:null
/// <br> 失敗 code:1011 errorMesssage:PPSDKが起動していない PPCheckInResult:null
/// <br> 失敗 code:1012 errorMesssage:PPSDKがリモート停止している PPCheckInResult:null
/// <br> 失敗 code:1030 errorMesssage:ジオライブラリが確認できない PPCheckInResult:null
/// <br> 失敗 code:1031 errorMesssage:ジオライブラリが起動していない PPCheckInResult:null
/// <br> 失敗 code:1032 errorMesssage:ジオライブラリがリモート停止している PPCheckInResult:null
/// <br> 失敗 code:1033 errorMesssage:位置情報権限がない PPCheckInResult:null
/// <br> 失敗 code:1034 errorMesssage:正確な位置情報権限がない PPCheckInResult:null
/// <br> 失敗 code:1035 errorMesssage:端末位置情報がオフになっている PPCheckInResult:null
/// <br> 失敗 code:1041 errorMesssage:現在チェックイン処理中 PPCheckInResult:null
/// <br> 失敗 code:1042 errorMesssage:ジオリストが取得できない PPCheckInResult:null
/// <br> 失敗 code:1051 errorMesssage:処理時間オーバー PPCheckInResult:null
/// <br> 失敗 code:1900 errorMesssage:予期せぬエラー PPCheckInResult:null
- (void)updateLocationAndCheckInOptions:(NSDictionary<NSString *, NSString *> * _Nullable)options callback:(void (^ _Nonnull)(NSString * _Nonnull, NSString * _Nullable, PPCheckInResult * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
