// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ProfilePassportBeacon
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CommonCrypto
import CoreLocation
import Foundation
@_exported import ProfilePassportBeacon
import ProfilePassportCore
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconTagDataAndBeaconDataEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var id: Swift.Int64
  public var beaconTagID: Swift.Int
  public var beaconID: Swift.Int
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconDataDBEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var beaconID: Swift.Int
  public var beaconData: Swift.String
  @objc deinit
}
public protocol PP3BBeaconDetectManagerIF {
  func setup()
  func updateState(sdkThread: ProfilePassportCore.PP3CSDKQueue)
  func addLocationUpdateCallback(callBackId: Swift.String, beaconConfigCallback: @escaping (_ newLocation: CoreLocation.CLLocation) -> Swift.Bool?)
}
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconStateDBEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var beaconID: Swift.Int
  public var beaconState: Swift.String?
  public var beaconAtTime: Swift.String?
  public var beaconLeftTime: Swift.String?
  public var beaconRegistTime: Swift.String?
  public var beaconRemoveTime: Swift.String?
  @objc deinit
}
public protocol PP3BBeaconResourceManagerIF {
  func setup()
  func updateState(sdkThread: ProfilePassportCore.PP3CSDKQueue)
  func addBeaconResourceCompleteCallback(callBackId: Swift.String, beaconResourceCompleteCallback: @escaping () -> Swift.Bool)
}
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconTagDataAndNoticeDataDBEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var id: Swift.Int64
  public var beaconTagID: Swift.Int
  public var event: Swift.String
  public var noticeID: Swift.Int
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class PP3BBeaconTagDataDBEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var beaconTagID: Swift.Int
  public var beaconTagName: Swift.String
  @objc deinit
}
public protocol PP3BBeaconStateAccessorIF {
  func getBeaconState() -> Swift.Bool
}
public protocol PP3BBeaconDBAccessorIF {
  func registerOrUpdateBeaconS3FilePath(entity: ProfilePassportBeacon.PP3BBeaconS3FilePathDBEntity) -> Swift.Bool
  func getS3FilePathListByMeshList(meshList: [Swift.String], updateFlag: Swift.Bool) -> [ProfilePassportBeacon.PP3BBeaconS3FilePathDBEntity]?
  func getBeaconS3FilePathDataList(notIncludeStart: Swift.String?, limit: Swift.Int) -> [ProfilePassportBeacon.PP3BBeaconS3FilePathDBEntity]?
  func registerBeaconDBData(beaconListData: Foundation.Data, beaconS3FilePath: Swift.String, lastUpdateTime: Swift.String) -> Swift.Bool
  func getBeaconDataListByMeshList(meshList: [Swift.String]) -> [ProfilePassportBeacon.PP3BBeaconDataDBEntity]?
  func getBeaconDataListByBeaconIDList(beaconIDList: [Swift.Int]) -> [ProfilePassportBeacon.PP3BBeaconDataDBEntity]?
  func deleteBeaconDBDataByBeaconS3FilePath(beaconS3FilePath: Swift.String) -> Swift.Bool
  func getBeaconTagDataByBeaconTagId(beaconTagId: Swift.Int) -> ProfilePassportBeacon.PP3BBeaconTagDataDBEntity?
  func getBeaconTagDataAndNoticeDataListByBeaconTagId(beaconTagId: Swift.Int) -> [ProfilePassportBeacon.PP3BBeaconTagDataAndNoticeDataDBEntity]?
  func registerBeaconStateData(beaconStateData: ProfilePassportBeacon.PP3BBeaconStateDBEntity) -> Swift.Int
  func getBeaconStateDataListByBeaconIDList(beaconIDList: [Swift.Int]) -> [ProfilePassportBeacon.PP3BBeaconStateDBEntity]?
  func getBeaconStateDataListByBeaconTagID(beaconTagId: Swift.Int) -> [ProfilePassportBeacon.PP3BBeaconStateDBEntity]?
  func deleteBeaconStateDataByBeaconIDList(beaconIDList: [Swift.Int]) -> Swift.Bool
  func deleteBeaconStateDataBeforeTime(time: Swift.String) -> Swift.Bool
  func countBeaconDBData(tableName: Swift.String) -> Swift.Int
  func getBeaconIdListByMeshAndState(meshList: [Swift.String]?, beaconState: Swift.String) -> [Swift.Int]?
  func getBeaconDataDBEntity() -> [ProfilePassportBeacon.PP3BBeaconDataDBEntity]?
  func getBeaconTagDataAndNoticeDataDBEntity() -> [ProfilePassportBeacon.PP3BBeaconTagDataAndNoticeDataDBEntity]?
  func getBeaconStateDBEntity() -> [ProfilePassportBeacon.PP3BBeaconStateDBEntity]?
  func getBeaconTagDagDataDBEntity() -> [ProfilePassportBeacon.PP3BBeaconTagDataDBEntity]?
}
@objc public protocol PPBeaconDelegate : ProfilePassportCore.PPSDKDelegate {
  @objc optional func onBeaconEvent(beaconInfo: ProfilePassportBeacon.PPBeaconResult) -> Swift.Bool
}
public enum PP3BBeaconDBState : Swift.String {
  case UNKNOWN
  case IN
  case OUT
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct PP3BBeaconRSSIInfo {
}
public struct PP3BBeaconToFromIdInfo {
}
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconDataAndS3FileDBEntity : ObjectiveC.NSObject {
  public var created: Swift.String?
  public var id: Swift.Int64
  public var beaconS3FilePathID: Swift.Int64
  public var beaconID: Swift.Int
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class PP3BBeaconS3FilePathDBEntity : ObjectiveC.NSObject {
  public var id: Swift.Int64
  public var created: Swift.String?
  public var beaconS3FilePath: Swift.String
  public var lastUpdateTime: Swift.String
  public var mesh: Swift.String
  public var updateFlag: Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PPBeaconResult : ObjectiveC.NSObject {
  @objc public var beaconId: Swift.Int
  @objc public var beaconName: Swift.String
  @objc public var beaconUuid: Swift.String
  @objc public var beaconMajor: Swift.Int
  @objc public var beaconMinor: Swift.Int
  @objc public var beaconRssi: Swift.Float
  @objc public var beaconEvent: ProfilePassportBeacon.PPBeaconEvent
  @objc public var beaconDwellTime: Swift.Int64
  @objc public var beaconAtTime: Foundation.Date?
  @objc public var beaconLastUpdateTime: Foundation.Date?
  @objc public var beaconCoordinate: CoreLocation.CLLocationCoordinate2D
  @objc public var beaconProximity: CoreLocation.CLProximity
  @objc public var beaconAccuracy: Swift.Double
  @objc public var beaconTags: [ProfilePassportBeacon.PPBeaconTagResult]
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PPBeaconTagResult : ObjectiveC.NSObject {
  @objc public var beaconTagId: Swift.Int
  @objc public var beaconTagName: Swift.String
  @objc public var beaconTagEvent: ProfilePassportBeacon.PPBeaconEvent
  @objc public var beaconTagDwellTime: Swift.Int64
  @objc public var beaconTagAtTime: Foundation.Date?
  @objc public var beaconTagLastUpdateTime: Foundation.Date?
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum PPBeaconEvent : Swift.Int {
  case NONE = 0
  case AT
  case VISIT
  case LEFT
  case REMOVE
  public typealias RawValue = Swift.String
  public var rawValue: ProfilePassportBeacon.PPBeaconEvent.RawValue {
    get
  }
  public init?(rawValue: ProfilePassportBeacon.PPBeaconEvent.RawValue)
}
public protocol PP3BBeaconContextIF : ProfilePassportCore.PP3CLibraryContextIF {
  var beaconDBAccessor: (any ProfilePassportBeacon.PP3BBeaconDBAccessorIF)! { get set }
  var beaconStateAccessor: (any ProfilePassportBeacon.PP3BBeaconStateAccessorIF)! { get set }
  var beaconLogGenerator: (any ProfilePassportBeacon.PP3BBeaconLogGeneratorIF)! { get set }
  var beaconResourceManager: (any ProfilePassportBeacon.PP3BBeaconResourceManagerIF)! { get set }
  var beaconDetectManager: (any ProfilePassportBeacon.PP3BBeaconDetectManagerIF)! { get set }
}
public protocol PP3BBeaconLogGeneratorIF {
  func updateState(sdkThread: ProfilePassportCore.PP3CSDKQueue)
  func generateBeaconLog(beaconResult: ProfilePassportBeacon.PPBeaconResult, continueFlag: Swift.Bool)
}
extension ProfilePassportBeacon.PP3BBeaconDBState : Swift.Equatable {}
extension ProfilePassportBeacon.PP3BBeaconDBState : Swift.Hashable {}
extension ProfilePassportBeacon.PP3BBeaconDBState : Swift.RawRepresentable {}
extension ProfilePassportBeacon.PPBeaconEvent : Swift.Equatable {}
extension ProfilePassportBeacon.PPBeaconEvent : Swift.Hashable {}
extension ProfilePassportBeacon.PPBeaconEvent : Swift.RawRepresentable {}
